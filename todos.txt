todos:

Gill
- create /mystats with two params: **type** (avg distance/avg pace/weeks ran) + **time period** (lifetime/2023/2022)
- **NOT SURE IF THIS IS POSSIBLE WITH CURRENT DISCORD.JS LIBRARY. PREVENTS @everyone PINGS** /announcement command to ping @everyone from the #announcements channel. edit message as needed
    - client.channels.cache.get('CHANNEL ID').send('Hello here!')
    - const bot = new Discord.Client({disableEveryone: False});
- create a setTimeout() for /pushform to check the server for new data so i don't have to do it at run club or before run club each week
- setup server at home

Misc & up for grabs pending completion of current lists:
- add utility function that checks all interactions for roles if they are in the sd.userid object and fire it during an interaction in index.js
- update server nickname each time someone uses a command, or if they are not in the users table, concatenate '. When you get a chance, please use the **/addme** command :cow:'
    - this will be a function in index.js likely
- create a /submityear command. what to do with this? should we just have the dates as strings such in static data as "y3": "unix start - unix end"? what is the best way? <- not this way for sure, we need to keep run sheets and use static data to track timelines for each year: { 'y3': 'unix timestamp start - unix timestamp end' }
- refactor /commands. the character limit per message is going to poop itself once we have too many commands
    - install handlebars and puppeteer. this is good practice for front end stuff.
- create command /previousrun or something for people that forgot to submit the previous week so in the event of a muliplier they don't sneak double miles. this will involve a date param and will use the current /newrun file structure with edits to make sure they don't have a run on that date yet, or a run that has been submitted that current week
- assign roles when mileage tiers are hit
- /leaderboard relative (or /leaderboard me, i can't decide)
    - this will render an html page with ALL peeps on the leaderboard, or the top 5 then a line with (......), then middle 5 where the user that submitted the command is relative to the others around them.
    - ex:
        1. runner one: 99 mi
        2. runner two: 98 mi
        3. runner three: 97 mi
        4. runner four: 96 mi
        5. runner five: 95 mi
        ........
        14. runner fourteen: 79 mi
        15. runner fifteen: 78 mi
        16. user that submitted the command: 77 mi
        17. runner seventeen: 76 mi
        18. runner eighteen: 75 mi
        ......and X more runners below
- check untappd api to connect AC beers to a command /taplist or something fun that doesn't involve run data


completed:
- make /newrun error handling more descriptive for the user if they do something wrong
- add more content to static data new run responses and greetings. need more variation as i have seen many repeats one after another
- update /newrun to check for id in static data
    - pull users sheet when heife signs in and set the static data users obj for quick check
    - we need to pull data from server on startup and set it as object in static data
- figure out a way to use a discord user id for the current sheet check, which is using first name last name
    - likely we will do key/val pairs in an obj for static data users and match the user id then retrieve the sheet
- lifetime miles (this is a grande task)
- when a user enters /addme command, make sure their nickname in the guild is readable aka "Gill H. or Gill" and NOT "diesWithoutGrace"
- create /myrewards and /redeemreward for each user
- /leaderboard command. need two: top and relative to the user who runs the command because of character limits
- update /pushform to include better response to command sender
    - were bad times handled correctly?
    - what time was submitted to google if needed to be handled? was it good for google or did it fuck up? good format: 00:00.000